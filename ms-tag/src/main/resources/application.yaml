server:
  port: 0
  servlet:
    # http://hostname:port/context-path/request-mapping/uri
    # http://localhost:8090/ms-tag/...
    context-path: /ms-tag
  compression:
    enabled: true
    min-response-size: 2048
    mime-types: text/html,text/xml,text/plain,text/css,application/json

spring:
  application:
    name: ms-tag

  # Zipkin configuration
  #zipkin.base-url: http://localhost:9411/
  #sleuth.sampler.probability: 1.0

  datasource:
    url: jdbc:mysql://${MYSQL_HOSTNAME}:${MYSQL_PORT}/${MYSQL_DATABASE_NAME}?ssl-mode=REQUIRED
    #url: jdbc:mariadb://${MYSQL_HOSTNAME}:${MYSQL_PORT}/${MYSQL_DATABASE_NAME}?ssl-mode=REQUIRED
    username: ${MYSQL_USERNAME}
    password: ${MYSQL_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver
    #driver-class-name: org.mariadb.jdbc.Driver
    hikari:
      pool-name: ms-tag-connection-pool
      maximum-pool-size: 10
      #minimum-idle: 3
      #idle-timeout: 600000
      #register-mbeans: true
      #connection-timeout: 30000
      #max-lifetime: 1800000

  data:
    jpa:
      repositories:
        bootstrap-mode: DEFAULT
      # 'bootstrap-mode' valori ammessi:
      #   - DEFAULT -> I repositories vengono inizializzati all'avvio dell'applicazione
      #   - DEFERRED -> I repositories vengono inizializzati all'avvio dell'applicazione ma in modo asincrono
      #   - LAZY -> I repositories vengono inizializzati nel momento in cui vengono richiamati (velocizza l'avvio dell'applicazione ma aumenta i tempi di latenza alla prima chiamata)

  jpa:
    hibernate:
      # ddl-auto values:
      # create-drop -> creazione del db all'all'avvio dell'applicazione e distruzione del db alla chiusura dell'applicazione
      # update -> aggiorna il db con le tabelle 'nuove', modifica quelle attuali, non elimina eventuali colonne che non esistono pi�
      # validated -> confronta le entit� con le tabelle e solleva eccezioni se ci sono incongruenze
      # none: non viene fatto nulla (da usare assolutamente in produzione)
      ddl-auto: update
    properties:
      dialect: org.hibernate.dialect.MySQLDialect
      #dialect: org.hibernate.dialect.MariaDBDialect
      hibernate:
        format_sql: true
        use_sql_comments: true
        highlight_sql: true
    show-sql: true
    open-in-view: false

logging:
  level:
    it.cgmconsulting.ms_tag: info
    org.hibernate.orm.jdbc.bind: trace
    org.springframework: info

eureka:
  instance:
    prefer-ip-address: true
    leaseRenewalIntervalInSeconds: 30
  client:
    register-with-eureka: true
    service-url:
      default-zone: localhost:8761/eureka

management:
  endpoint:
    health:
      show-details: always
  endpoints:
    web:
      exposure:
        include: health,info
  info:
    java.enabled: true
    os.enabled: true
  otlp:
    tracing:
      endpoint: http://localhost:9411/api/v2/spans
  tracing:
    sampling:
      probability: 1.0

# CUSTOM PROPERTIES
application:
  security:
    internalToken: ${INTERNAL_TOKEN}