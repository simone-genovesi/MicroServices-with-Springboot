server:
  port: 0
  servlet:
    context-path: /ms-post

spring:
  application:
    name: ms-post

  datasource:
    url: jdbc:mysql://${MYSQL_HOSTNAME}:${MYSQL_PORT}/${MYSQL_DATABASE_NAME}?ssl-mode=REQUIRED
    #url: jdbc:mariadb://${MYSQL_HOSTNAME}:${MYSQL_PORT}/${MYSQL_DATABASE_NAME}?ssl-mode=REQUIRED
    username: ${MYSQL_USERNAME}
    password: ${MYSQL_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver
    #driver-class-name: org.mariadb.jdbc.Driver
    hikari:
      pool-name: ms-post-connection-pool
      maximum-pool-size: 10

  jpa:
    hibernate:
      # ddl-auto values:
      # create-drop -> creazione del db all'all'avvio dell'applicazione e distruzione del db alla chiusura dell'applicazione
      # update -> aggiorna il db con le tabelle 'nuove', modifica quelle attuali, non elimina eventuali colonne che non esistono più
      # validated -> confronta le entità con le tabelle e solleva eccezioni se ci sono incongruenze
      # none: non viene fatto nulla (da usare assolutamente in produzione)
      ddl-auto: update
    properties:
      dialect: org.hibernate.dialect.MySQLDialect
      #dialect: org.hibernate.dialect.MariaDBDialect
      hibernate:
        format_sql: true
        use_sql_comments: true
        highlight_sql: true
    show-sql: true
    open-in-view: false

logging:
  level:
    it.cgmconsulting.ms_post: info
    org.hibernate.orm.jdbc.bind: trace
    org.springframework: info

eureka:
  instance:
    prefer-ip-address: true
    leaseRenewalIntervalInSeconds: 30
  client:
    register-with-eureka: true
    service-url:
      default-zone: localhost:8761/eureka

management:
  endpoints:
    web:
      exposure:
        include: info,health,endpoints
  health:
    circuit-breakers:
      enabled: true
  endpoint:
    health:
      show-details: always
  info:
    java.enabled: true
    os.enabled: true

resilience4j.circuitbreaker:
  instances:
    a-tempo:
      register-health-indicator: true
      # Apertura del circuito se la request impiega più tempo di quanto stimato
      sliding-window-type: TIME_BASED
      # Numero di tentativi di request
      sliding-window-size: 1
      # Soglia - in percentuale - di fallimenti (se al 100%, basta che la chiamata al microservizio fallisca una volta sola)
      slow-call-rate-threshold: 100
      # Un'interazione è considerata lenta se impiega più di n secondi a rispondere
      slow-call-duration-threshold: 2s
      # Tempo per passare dallo stato di OPEN allo stato di HALF_OPEN
      wait-duration-in-open-state: 60s
      minimum-number-of-calls: 1
      # Numero massimo di request permesse in stato HALF_OPEN
      permitted-number-of-calls-in-half-open-state: 1
      automatic-transition-from-open-to-half-open-enabled: true
    a-tentativi:
      register-health-indicator: true
      # Apertura del circuito se la request fallisce n volte
      sliding-window-type: COUNT_BASED
      # Numero di tentativi di request
      sliding-window-size: 1
      # Soglia - in percentuale - di fallimenti (se al 100%, basta che la chiamata al microservizio fallisca una volta sola)
      failure-rate-threshold: 100
      wait-duration-in-open-state: 60s
      permitted-number-of-calls-in-half-open-state: 1
      automatic-transition-from-open-to-half-open-enabled: true

# CUSTOM PROPERTIES
application:
  security:
    token: ${TOKEN}
    internalToken: ${INTERNAL_TOKEN}